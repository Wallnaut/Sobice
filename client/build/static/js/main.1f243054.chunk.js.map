{"version":3,"sources":["components/Logo.jsx","components/Login/index.jsx","state.js","api.js","components/Chat/components/OnlineIndicator.jsx","components/Chat/components/ChatList/components/ChatListItem/index.jsx","utils.js","components/Chat/components/ChatList/components/ChatIcon.jsx","components/Chat/components/ChatList/components/AvatarImage.jsx","components/Chat/components/ChatList/components/Footer.jsx","components/Chat/components/ChatList/index.jsx","components/Chat/components/MessageList/components/InfoMessage.jsx","components/Chat/components/MessageList/components/MessagesLoading.jsx","components/Chat/components/MessageList/components/NoMessages.jsx","components/Chat/components/MessageList/components/ClockIcon.jsx","components/Chat/components/MessageList/components/ReceiverMessage.jsx","components/Chat/components/MessageList/components/SenderMessage.jsx","components/Chat/components/MessageList/index.jsx","components/Chat/components/TypingArea.jsx","components/Chat/use-chat-handlers.js","components/Chat/index.jsx","components/LoadingScreen.jsx","hooks.js","App.jsx","index.jsx"],"names":["Logo","width","height","xmlns","xmlnsXlink","viewBox","id","d","transform","fill","xlinkHref","y","cx","cy","rx","ry","DEMO_USERS","Login","onLogIn","useState","Math","floor","random","length","username","setUsername","password","setPassword","error","setError","onSubmit","event","a","preventDefault","className","style","boxShadow","maxWidth","backgroundColor","paddingLeft","paddingRight","borderTopLeftRadius","borderTopRightRadius","alt","src","process","bottom","left","paddingTop","borderBottomLeftRadius","borderBottomRightRadius","names","htmlFor","value","onChange","target","type","placeholder","required","Toast","minWidth","onClose","show","delay","autohide","Header","Body","UsernameSelect","open","setOpen","setWidth","ref","useRef","clientRectWidth","current","getBoundingClientRect","useEffect","listener","document","addEventListener","removeEventListener","focus","tabIndex","onClick","o","map","name","reducer","state","action","currentRoom","rooms","users","payload","online","messages","offset","undefined","lastMessage","message","newRooms","forEach","room","initialState","AppContext","createContext","useAppState","useContext","useAppStateContext","useReducer","axios","defaults","withCredentials","url","x","getMe","get","then","data","catch","_","login","post","e","Error","response","logOut","getMessages","size","params","reverse","getUsers","ids","addRoom","user1","user2","getRooms","userId","OnlineIndicator","hide","opacity","useChatListItemHandlers","useMemo","pseudoUserId","abs","parseInt","split","pop","isUser","usersFiltered","Object","entries","filter","useLastMessage","dispatch","ChatListItem","active","parseRoomName","populateUsersFromLoadedMessages","require","userIds","from","keys","newUsers","ChatIcon","stroke","strokeWidth","x1","y1","x2","y2","gradientUnits","stopColor","AvatarImage","av","roomId","TOTAL_IMAGES","seed1","seed2","uidParsed","roomIdParsed","theId","getAvatarByUserAndRoomId","objectFit","LogoutButton","onLogOut","col","noinfo","cursor","UserInfo","user","Footer","flex","minHeight","ChatList","processedRooms","roomsList","values","main","other","sort","b","InfoMessage","fontSize","MessagesLoading","role","NoMessages","ClockIcon","ReceiverMessage","date","borderRadius","fontWeight","moment","unix","format","SenderMessage","onUserClicked","MessageList","messageListElement","onLoadMoreMessages","key","TypingArea","setMessage","useChatHandlers","scrollToTop","useCallback","setTimeout","scrollTop","scrollToBottom","scrollTo","top","scrollHeight","onFetchMessages","prepend","targetUser","Chat","onMessageSend","borderBottom","trim","LoadingScreen","updateUser","newUser","infoMessage","useAppHandlers","onUserLoaded","loading","setLoading","setUser","onError","onLoading","finally","useUser","connected","setConnected","socketRef","socket","disconnect","connect","io","on","console","log","off","useSocket","push","emit","Date","App","showLogin","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1f243054.chunk.js","sourcesContent":["const Logo = ({ width = 64, height = 64 }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      viewBox=\"0 0 32 32\"\r\n      height={height}\r\n      width={width}\r\n    >\r\n      <script />\r\n      <defs>\r\n        <path\r\n          id=\"prefix__a\"\r\n          d=\"M45.536 38.764c-2.013 1.05-12.44 5.337-14.66 6.494s-3.453 1.146-5.207.308-12.85-5.32-14.85-6.276c-1-.478-1.524-.88-1.524-1.26v-3.813s14.447-3.145 16.78-3.982 3.14-.867 5.126-.14 13.853 2.868 15.814 3.587v3.76c0 .377-.452.8-1.477 1.324z\"\r\n        />\r\n        <path\r\n          id=\"prefix__b\"\r\n          d=\"M45.536 28.733c-2.013 1.05-12.44 5.337-14.66 6.494s-3.453 1.146-5.207.308-12.85-5.32-14.85-6.276-2.04-1.613-.077-2.382l15.332-5.935c2.332-.837 3.14-.867 5.126-.14s12.35 4.853 14.312 5.57 2.037 1.31.024 2.36z\"\r\n        />\r\n      </defs>\r\n      <g transform=\"matrix(.84833 0 0 .84833 -7.884 -9.45)\">\r\n        <use fill=\"#a41e11\" xlinkHref=\"#prefix__a\" />\r\n        <path\r\n          d=\"M45.536 34.95c-2.013 1.05-12.44 5.337-14.66 6.494s-3.453 1.146-5.207.308-12.85-5.32-14.85-6.276-2.04-1.613-.077-2.382l15.332-5.936c2.332-.836 3.14-.867 5.126-.14S43.55 31.87 45.51 32.6s2.037 1.31.024 2.36z\"\r\n          fill=\"#d82c20\"\r\n        />\r\n        <use fill=\"#a41e11\" xlinkHref=\"#prefix__a\" y={-6.218} />\r\n        <use fill=\"#d82c20\" xlinkHref=\"#prefix__b\" />\r\n        <path\r\n          d=\"M45.536 26.098c-2.013 1.05-12.44 5.337-14.66 6.495s-3.453 1.146-5.207.308-12.85-5.32-14.85-6.276c-1-.478-1.524-.88-1.524-1.26V21.55s14.447-3.145 16.78-3.982 3.14-.867 5.126-.14 13.853 2.868 15.814 3.587v3.76c0 .377-.452.8-1.477 1.324z\"\r\n          fill=\"#a41e11\"\r\n        />\r\n        <use fill=\"#d82c20\" xlinkHref=\"#prefix__b\" y={-6.449} />\r\n        <g fill=\"#fff\">\r\n          <path d=\"M29.096 20.712l-1.182-1.965-3.774-.34 2.816-1.016-.845-1.56 2.636 1.03 2.486-.814-.672 1.612 2.534.95-3.268.34zM22.8 24.624l8.74-1.342-2.64 3.872z\" />\r\n          <ellipse cx={20.444} cy={21.402} rx={4.672} ry={1.811} />\r\n        </g>\r\n        <path d=\"M42.132 21.138l-5.17 2.042-.004-4.087z\" fill=\"#7a0c00\" />\r\n        <path\r\n          d=\"M36.963 23.18l-.56.22-5.166-2.042 5.723-2.264z\"\r\n          fill=\"#ad2115\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","// @ts-check\r\nimport { Toast } from \"react-bootstrap\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport Logo from \"../Logo\";\r\nimport \"./style.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst DEMO_USERS = [\"Pavle\", \"Momcilo\", \"Mihajlo\"];\r\n\r\nexport default function Login({ onLogIn }) {\r\n  const [username, setUsername] = useState(\r\n    () => DEMO_USERS[Math.floor(Math.random() * DEMO_USERS.length)]\r\n  );\r\n  const [password, setPassword] = useState(\"password123\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    onLogIn(username, password, setError);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-form text-center login-page\">\r\n        <div\r\n          className=\"rounded\"\r\n          style={{\r\n            boxShadow: \"0 0.75rem 1.5rem rgba(18,38,63,.03)\",\r\n          }}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <div\r\n              className=\"row no-gutters align-items-center\"\r\n              style={{\r\n                maxWidth: 400,\r\n                backgroundColor: \"rgba(85, 110, 230, 0.25)\",\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n                borderTopLeftRadius: 4,\r\n                borderTopRightRadius: 4,\r\n              }}\r\n            >\r\n              <div className=\"col text-primary text-left\">\r\n                <h3 className=\"font-size-15\">Welcome Back !</h3>\r\n                <p>Sign in to continue</p>\r\n              </div>\r\n              <div className=\"col align-self-end\">\r\n                <img\r\n                  alt=\"welcome back\"\r\n                  style={{ maxWidth: \"100%\" }}\r\n                  src={`${process.env.PUBLIC_URL}/welcome-back.png`}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"position-absolute\"\r\n              style={{ bottom: -36, left: 20 }}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"rgb(239, 242, 247)\",\r\n                  width: 72,\r\n                  height: 72,\r\n                }}\r\n                className=\"rounded-circle d-flex align-items-center justify-content-center\"\r\n              >\r\n                <Logo width={34} height={34} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <form\r\n            className=\"bg-white text-left px-4\"\r\n            style={{\r\n              paddingTop: 58,\r\n              borderBottomLeftRadius: 4,\r\n              borderBottomRightRadius: 4,\r\n            }}\r\n            onSubmit={onSubmit}\r\n          >\r\n            <label className=\"font-size-12\">Name</label>\r\n\r\n            <div className=\"username-select mb-3\">\r\n              <UsernameSelect\r\n                username={username}\r\n                setUsername={setUsername}\r\n                names={DEMO_USERS}\r\n              />\r\n            </div>\r\n\r\n            <label htmlFor=\"inputPassword\" className=\"font-size-12\">\r\n              Password\r\n            </label>\r\n            <input\r\n              value={password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n            <div style={{ height: 30 }} />\r\n            <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n              Sign in\r\n            </button>\r\n            <div className=\"login-error-anchor\">\r\n              <div className=\"toast-box\">\r\n                <Toast\r\n                  style={{ minWidth: 277 }}\r\n                  onClose={() => setError(null)}\r\n                  show={error !== null}\r\n                  delay={3000}\r\n                  autohide\r\n                >\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Error</strong>\r\n                  </Toast.Header>\r\n                  <Toast.Body>{error}</Toast.Body>\r\n                </Toast>\r\n              </div>\r\n            </div>\r\n            <div style={{ height: 30 }} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst UsernameSelect = ({ username, setUsername, names = [\"\"] }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n  const ref = useRef();\r\n  /** @ts-ignore */\r\n  const clientRectWidth = ref.current?.getBoundingClientRect().width;\r\n  useEffect(() => {\r\n    /** @ts-ignore */\r\n    setWidth(clientRectWidth);\r\n  }, [clientRectWidth]);\r\n\r\n  /** Click away listener */\r\n  useEffect(() => {\r\n    if (open) {\r\n      const listener = () => setOpen(false);\r\n      document.addEventListener(\"click\", listener);\r\n      return () => document.removeEventListener(\"click\", listener);\r\n    }\r\n  }, [open]);\r\n\r\n  /** Make the current div focused */\r\n  useEffect(() => {\r\n    if (open) {\r\n      /** @ts-ignore */\r\n      ref.current?.focus();\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div\r\n      tabIndex={0}\r\n      ref={ref}\r\n      className={`username-select-dropdown ${open ? \"open\" : \"\"}`}\r\n      onClick={() => setOpen((o) => !o)}\r\n    >\r\n      <div className=\"username-select-row\">\r\n        <div>{username}</div>\r\n        <div>\r\n          <svg width={24} height={24}>\r\n            <path d=\"M7 10l5 5 5-5z\" fill=\"#333\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{ width: width }}\r\n        className={`username-select-block ${open ? \"open\" : \"\"}`}\r\n      >\r\n        {names.map((name) => (\r\n          <div\r\n            className=\"username-select-block-item\"\r\n            key={name}\r\n            onClick={() => setUsername(name)}\r\n          >\r\n            {name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// @ts-check\r\nimport { createContext, useContext, useReducer } from \"react\";\r\n\r\n/**\r\n * @typedef {{\r\n *  from: string\r\n *  date: number\r\n *  message: string\r\n *  roomId?: string\r\n * }} Message\r\n *\r\n * @typedef {{\r\n *   name: string;\r\n *   id: string;\r\n *   messages?: Message[]\r\n *   connected?: boolean;\r\n *   offset?: number;\r\n *   forUserId?: null | number | string\r\n *   lastMessage?: Message | null\r\n * }} Room\r\n *\r\n * @typedef {{\r\n *   username: string;\r\n *   id: string;\r\n *   online?: boolean;\r\n *   room?: string;\r\n * }} UserEntry\r\n *\r\n * @typedef {{\r\n *  currentRoom: string;\r\n *  rooms: {[id: string]: Room};\r\n *  users: {[id: string]: UserEntry}\r\n * }} State\r\n *\r\n * @param {State} state\r\n * @param {{type: string; payload: any}} action\r\n * @returns {State}\r\n */\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"clear\":\r\n      return { currentRoom: \"0\", rooms: {}, users: {} };\r\n    case \"set user\": {\r\n      return {\r\n        ...state,\r\n        users: { ...state.users, [action.payload.id]: action.payload },\r\n      };\r\n    }\r\n    case \"make user online\": {\r\n      return {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          [action.payload]: { ...state.users[action.payload], online: true },\r\n        },\r\n      };\r\n    }\r\n    case \"append users\": {\r\n      return { ...state, users: { ...state.users, ...action.payload } };\r\n    }\r\n    case \"set messages\": {\r\n      return {\r\n        ...state,\r\n        rooms: {\r\n          ...state.rooms,\r\n          [action.payload.id]: {\r\n            ...state.rooms[action.payload.id],\r\n            messages: action.payload.messages,\r\n            offset: action.payload.messages.length,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case \"prepend messages\": {\r\n      const messages = [\r\n        ...action.payload.messages,\r\n        ...state.rooms[action.payload.id].messages,\r\n      ];\r\n      return {\r\n        ...state,\r\n        rooms: {\r\n          ...state.rooms,\r\n          [action.payload.id]: {\r\n            ...state.rooms[action.payload.id],\r\n            messages,\r\n            offset: messages.length,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case \"append message\":\r\n      if (state.rooms[action.payload.id] === undefined) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        rooms: {\r\n          ...state.rooms,\r\n          [action.payload.id]: {\r\n            ...state.rooms[action.payload.id],\r\n            lastMessage: action.payload.message,\r\n            messages: state.rooms[action.payload.id].messages\r\n              ? [\r\n                ...state.rooms[action.payload.id].messages,\r\n                action.payload.message,\r\n              ]\r\n              : undefined,\r\n          },\r\n        },\r\n      };\r\n    case 'set last message':\r\n      return { ...state, rooms: { ...state.rooms, [action.payload.id]: { ...state.rooms[action.payload.id], lastMessage: action.payload.lastMessage } } };\r\n    case \"set current room\":\r\n      return { ...state, currentRoom: action.payload };\r\n    case \"add room\":\r\n      return {\r\n        ...state,\r\n        rooms: { ...state.rooms, [action.payload.id]: action.payload },\r\n      };\r\n    case \"set rooms\": {\r\n      /** @type {Room[]} */\r\n      const newRooms = action.payload;\r\n      const rooms = { ...state.rooms };\r\n      newRooms.forEach((room) => {\r\n        rooms[room.id] = {\r\n          ...room,\r\n          messages: rooms[room.id] && rooms[room.id].messages,\r\n        };\r\n      });\r\n      return { ...state, rooms };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** @type {State} */\r\nconst initialState = {\r\n  currentRoom: \"main\",\r\n  rooms: {},\r\n  users: {},\r\n};\r\n\r\nconst useAppStateContext = () => {\r\n  return useReducer(reducer, initialState);\r\n};\r\n\r\n// @ts-ignore\r\nexport const AppContext = createContext();\r\n\r\n/**\r\n * @returns {[\r\n *  State,\r\n *  React.Dispatch<{\r\n *   type: string;\r\n *   payload: any;\r\n * }>\r\n * ]}\r\n */\r\nexport const useAppState = () => {\r\n  const [state, dispatch] = useContext(AppContext);\r\n  return [state, dispatch];\r\n};\r\n\r\nexport default useAppStateContext;","import axios from 'axios';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst BASE_URL = '';\r\n\r\nexport const MESSAGES_TO_LOAD = 15;\r\n\r\nconst url = x => `${BASE_URL}${x}`;\r\n\r\nexport const getMe = () => {\r\n  return axios.get(url('/me'))\r\n    .then(x => x.data)\r\n    .catch(_ => null);\r\n};\r\n\r\nexport const login = (username, password) => {\r\n  return axios.post(url('/login'), {\r\n    username,\r\n    password\r\n  }).then(x =>\r\n    x.data\r\n  )\r\n    .catch(e => { throw new Error(e.response && e.response.data && e.response.data.message); });\r\n};\r\n\r\nexport const logOut = () => {\r\n  return axios.post(url('/logout'));\r\n};\r\n\r\n/** \r\n *\r\n * \r\n * @returns {Promise<{\r\n *   heroku?: string;\r\n *   google_cloud?: string;\r\n *   vercel?: string;\r\n *   github?: string;\r\n * }>} \r\n */\r\n\r\n\r\nexport const getRandomName = () => {\r\n  return axios.get(url('/randomname')).then(x => x.data);\r\n};\r\n\r\n/**\r\n * \r\n * \r\n * @param {string} id room id\r\n * @param {number} offset \r\n * @param {number} size \r\n */\r\nexport const getMessages = (id,\r\n  offset = 0,\r\n  size = MESSAGES_TO_LOAD\r\n) => {\r\n  return axios.get(url(`/room/${id}/messages`), {\r\n    params: {\r\n      offset,\r\n      size\r\n    }\r\n  })\r\n    .then(x => x.data.reverse());\r\n};\r\n\r\n/**\r\n * @returns {Promise<{ name: string, id: string, messages: Array<import('./state').Message> }>}\r\n */\r\nexport const getPreloadedRoom = async () => {\r\n  return axios.get(url(`/room/0/preload`)).then(x => x.data);\r\n};\r\n\r\n/** \r\n * \r\n * @param {Array<number | string>} ids\r\n */\r\nexport const getUsers = (ids) => {\r\n  return axios.get(url(`/users`), { params: { ids } }).then(x => x.data);\r\n};\r\n\r\n\r\nexport const getOnlineUsers = () => {\r\n  return axios.get(url(`/users/online`)).then(x => x.data);\r\n};\r\n\r\n\r\nexport const addRoom = async (user1, user2) => {\r\n  return axios.post(url(`/room`), { user1, user2 }).then(x => x.data);\r\n};\r\n\r\n/** \r\n * @returns {Promise<Array<{ names: string[]; id: string }>>} \r\n */\r\nexport const getRooms = async (userId) => {\r\n  return axios.get(url(`/rooms/${userId}`)).then(x => x.data);\r\n};\r\n","const OnlineIndicator = ({ online, hide = false, width = 8, height = 8 }) => {\r\n  return (\r\n    <div\r\n      className={\r\n        online ? \"rounded-circle bg-success\" : \"rounded-circle bg-gray\"\r\n      }\r\n      style={{ width, height, opacity: hide ? 0 : 1 }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default OnlineIndicator;\r\n","// @ts-check\r\nimport \"./style.css\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useAppState } from \"../../../../../../state\";\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\nimport { getMessages } from \"../../../../../../api\";\r\n//import AvatarImage from \"../AvatarImage\";\r\nimport OnlineIndicator from \"../../../OnlineIndicator\";\r\n\r\n/**\r\n * @param {{ active: boolean; room: import('../../../../../../state').Room; onClick: () => void; }} props\r\n */\r\nconst ChatListItem = ({ room, active = false, onClick }) => {\r\n  const { online, name, lastMessage, userId } = useChatListItemHandlers(room);\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`chat-list-item d-flex align-items-start rounded ${\r\n        active ? \"bg-white\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"align-self-center mr-3\">\r\n        <OnlineIndicator online={online} hide={room.id === \"0\"} />\r\n      </div>\r\n      <div className=\"media-body overflow-hidden\">\r\n        <h5 className=\"text-truncate font-size-14 mb-1\">{name}</h5>\r\n        {lastMessage && (\r\n          <p className=\"text-truncate mb-0\"> {lastMessage.message} </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useChatListItemHandlers = (\r\n  /** @type {import(\"../../../../../../state\").Room} */ room\r\n) => {\r\n  const { id, name } = room;\r\n  const [state] = useAppState();\r\n\r\n  /** Here we want to associate the room with a user by its name (since it's unique). */\r\n  const [isUser, online, userId] = useMemo(() => {\r\n    try {\r\n      let pseudoUserId = Math.abs(parseInt(id.split(\":\").reverse().pop()));\r\n      const isUser = pseudoUserId > 0;\r\n      const usersFiltered = Object.entries(state.users)\r\n        .filter(([, user]) => user.username === name)\r\n        .map(([, user]) => user);\r\n      let online = false;\r\n      if (usersFiltered.length > 0) {\r\n        online = usersFiltered[0].online;\r\n        pseudoUserId = +usersFiltered[0].id;\r\n      }\r\n      return [isUser, online, pseudoUserId];\r\n    } catch (_) {\r\n      return [false, false, \"0\"];\r\n    }\r\n  }, [id, name, state.users]);\r\n\r\n  const lastMessage = useLastMessage(room);\r\n\r\n  return {\r\n    isUser,\r\n    online,\r\n    userId,\r\n    name: room.name,\r\n    lastMessage,\r\n  };\r\n};\r\n\r\nconst useLastMessage = (\r\n  /** @type {import(\"../../../../../../state\").Room} */ room\r\n) => {\r\n  const [, dispatch] = useAppState();\r\n  const { lastMessage } = room;\r\n  useEffect(() => {\r\n    if (lastMessage === undefined) {\r\n      /** need to fetch it */\r\n      if (room.messages === undefined) {\r\n        getMessages(room.id, 0, 1).then((messages) => {\r\n          let message = null;\r\n          if (messages.length !== 0) {\r\n            message = messages.pop();\r\n          }\r\n          dispatch({\r\n            type: \"set last message\",\r\n            payload: { id: room.id, lastMessage: message },\r\n          });\r\n        });\r\n      } else if (room.messages.length === 0) {\r\n        dispatch({\r\n          type: \"set last message\",\r\n          payload: { id: room.id, lastMessage: null },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"set last message\",\r\n          payload: {\r\n            id: room.id,\r\n            lastMessage: room.messages[room.messages.length - 1],\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }, [lastMessage, dispatch, room]);\r\n\r\n  return lastMessage;\r\n};\r\n\r\nexport default ChatListItem;\r\n","// @ts-check\r\n\r\nimport { getUsers } from \"./api\";\r\n\r\n/**\r\n * @param {string[]} names\r\n * @param {string} username\r\n */\r\nexport const parseRoomName = (names, username) => {\r\n  for (let name of names) {\r\n    if (typeof name !== 'string') {\r\n      name = name[0];\r\n    }\r\n    if (name !== username) {\r\n      return name;\r\n    }\r\n  }\r\n  return names[0];\r\n};\r\n\r\n\r\nexport const getAvatarByUserAndRoomId = (roomId = \"1\") => {\r\n  const TOTAL_IMAGES = 13;\r\n  const seed1 = 654;\r\n  const seed2 = 531;\r\n\r\n  const uidParsed = +roomId.split(\":\").pop();\r\n  let roomIdParsed = +roomId.split(\":\").reverse().pop();\r\n  if (roomIdParsed < 0) {\r\n    roomIdParsed += 3555;\r\n  }\r\n\r\n  const theId = (uidParsed * seed1 + roomIdParsed * seed2) % TOTAL_IMAGES;\r\n\r\n  return `${process.env.PUBLIC_URL}/avatars/${theId}.jpg`;\r\n};\r\n\r\nconst jdenticon = require(\"jdenticon\");\r\n\r\nconst avatars = {};\r\nexport const getAvatar = (username) => {\r\n  let av = avatars[username];\r\n  if (av === undefined) {\r\n    av =\r\n      \"data:image/svg+xml;base64,\" + window.btoa(jdenticon.toSvg(username, 50));\r\n    avatars[username] = av;\r\n  }\r\n  return av;\r\n};\r\n\r\nexport const populateUsersFromLoadedMessages = async (users, dispatch, messages) => {\r\n  const userIds = {};\r\n  messages.forEach((message) => {\r\n    userIds[message.from] = 1;\r\n  });\r\n\r\n  const ids = Object.keys(userIds).filter(\r\n    (id) => users[id] === undefined\r\n  );\r\n\r\n  if (ids.length !== 0) {\r\n\r\n    const newUsers = await getUsers(ids);\r\n    dispatch({\r\n      type: \"append users\",\r\n      payload: newUsers,\r\n    });\r\n  }\r\n\r\n};","const ChatIcon = () => (\r\n  <svg\r\n    width=\"32\"\r\n    height=\"32\"\r\n    viewBox=\"0 0 1651 1651\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <rect width=\"1651\" height=\"1651\" rx=\"14\" fill=\"white\" />\r\n    <path\r\n      d=\"M495.286 1098.96L497.967 1070.86L478.04 1050.88C408.572 981.233 368 891.771 368 795.344C368 585.371 565.306 402 826 402C1086.69 402 1284 585.371 1284 795.344C1284 1005.32 1086.69 1188.69 826 1188.69V1248.69L825.913 1188.69C779.837 1188.75 733.952 1182.77 689.432 1170.9L667.26 1164.98L646.8 1175.37C620.731 1188.61 562.74 1213.98 467.32 1235.35C480.554 1191.83 490.95 1144.39 495.286 1098.96Z\"\r\n      stroke=\"url(#paint0_linear)\"\r\n      strokeWidth=\"120\"\r\n    />\r\n    <defs>\r\n      <linearGradient\r\n        id=\"paint0_linear\"\r\n        x1=\"662.312\"\r\n        y1=\"397.956\"\r\n        x2=\"416.164\"\r\n        y2=\"1678.7\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#7514FB\" />\r\n        <stop offset=\"0.624243\" stopColor=\"#F26D41\" />\r\n        <stop offset=\"1\" stopColor=\"#F43B4B\" />\r\n      </linearGradient>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nexport default ChatIcon;\r\n","// @ts-check\r\nimport React, { useMemo } from \"react\";\r\nimport { getAvatarByUserAndRoomId } from \"../../../../../utils\";\r\nimport ChatIcon from \"./ChatIcon\";\r\n\r\nconst AvatarImage = ({ name, id }) => {\r\n  const url = useMemo(() => {\r\n    const av = getAvatarByUserAndRoomId(\"\" + id);\r\n    if (name === \"Pavle\") {\r\n      return `${process.env.PUBLIC_URL}/avatars/0.jpg`;\r\n    } else if (name === \"Pavle\") {\r\n      return `${process.env.PUBLIC_URL}/avatars/2.jpg`;\r\n    } else if (name === \"Momcilo\") {\r\n      return `${process.env.PUBLIC_URL}/avatars/9.jpg`;\r\n    } else if (name === \"Mihajlo\") {\r\n      return `${process.env.PUBLIC_URL}/avatars/8.jpg`;\r\n    }\r\n    return av;\r\n  }, [id, name]);\r\n\r\n  return (\r\n    <>\r\n      {name !== \"General\" ? (\r\n        <img\r\n          src={url}\r\n          alt={name}\r\n          style={{ width: 32, height: 32, objectFit: \"cover\" }}\r\n          className=\"rounded-circle avatar-xs\"\r\n        />\r\n      ) : (\r\n        <div className=\"overflow-hidden rounded-circle\">\r\n          <ChatIcon />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AvatarImage;\r\n","// @ts-check\r\n\r\nimport React from \"react\";\r\nimport { Power } from \"react-bootstrap-icons\";\r\nimport OnlineIndicator from \"../../OnlineIndicator\";\r\nimport AvatarImage from \"./AvatarImage\";\r\n\r\nconst Footer = ({ user, onLogOut }) => (\r\n  <div\r\n    className=\"row no-gutters align-items-center pl-4 pr-2 pb-3\"\r\n    style={{ height: \"inherit\", flex: 0, minHeight: 50 }}\r\n  >\r\n    {true ? (\r\n      <>\r\n        <UserInfo user={user} col={8} />\r\n        <LogoutButton onLogOut={onLogOut} col={4} />\r\n      </>\r\n    ) : (\r\n      <>\r\n        <LogoutButton noinfo onLogOut={onLogOut} col={8} />\r\n        <UserInfo noinfo user={user} col={4} />\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst LogoutButton = ({ onLogOut, col = 5, noinfo = false }) => (\r\n  <div\r\n    onClick={onLogOut}\r\n    style={{ cursor: \"pointer\" }}\r\n    className={`col-${col} text-danger ${!noinfo ? \"text-right\" : \"\"}`}\r\n  >\r\n    <Power /> Log out\r\n  </div>\r\n);\r\n\r\nconst UserInfo = ({ user, col = 7, noinfo = false }) => (\r\n  <div\r\n    className={`col-${col} d-flex align-items-center ${\r\n      noinfo ? \"justify-content-end\" : \"\"\r\n    }`}\r\n  >\r\n    <div className={`align-self-center ${noinfo ? \"\" : \"mr-3\"}`}>\r\n      <AvatarImage name={user.username} id={user.id} />\r\n    </div>\r\n    {!noinfo && (\r\n      <div className=\"media-body\">\r\n        <h5 className=\"font-size-14 mt-0 mb-1\">{user.username}</h5>\r\n        <div className=\"d-flex align-items-center\">\r\n          <OnlineIndicator online={true} />\r\n          <p className=\"ml-2 text-muted mb-0\">Active</p>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","// @ts-check\r\nimport React, { useMemo } from \"react\";\r\nimport ChatListItem from \"./components/ChatListItem\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst ChatList = ({ rooms, dispatch, user, currentRoom, onLogOut }) => {\r\n  const processedRooms = useMemo(() => {\r\n    const roomsList = Object.values(rooms);\r\n    const main = roomsList.filter((x) => x.id === \"0\");\r\n    let other = roomsList.filter((x) => x.id !== \"0\");\r\n    other = other.sort(\r\n      (a, b) => +a.id.split(\":\").pop() - +b.id.split(\":\").pop()\r\n    );\r\n    return [...(main ? main : []), ...other];\r\n  }, [rooms]);\r\n  return (\r\n    <>\r\n      <div className=\"chat-list-container flex-column d-flex pr-4\">\r\n        <div className=\"py-2\">\r\n          <p className=\"h5 mb-0 py-1 chats-title\">Chats</p>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-rounded chat-send w-md\"\r\n          >\r\n            <span className=\"d-none d-sm-inline-block mr-2\">Remove self test</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"messages-box flex flex-1\">\r\n          <div className=\"list-group rounded-0\">\r\n            {processedRooms.map((room) => (\r\n              <ChatListItem\r\n                key={room.id}\r\n                onClick={() =>\r\n                  dispatch({ type: \"set current room\", payload: room.id })\r\n                }\r\n                active={currentRoom === room.id}\r\n                room={room}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <Footer user={user} onLogOut={onLogOut} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","// @ts-check\r\nconst InfoMessage = ({ message }) => {\r\n  return (\r\n    <p\r\n      className=\"mb-2 fs-6 fw-light fst-italic text-black-50 text-center\"\r\n      style={{ opacity: 0.8, fontSize: 14 }}\r\n    >\r\n      {message}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default InfoMessage;\r\n","// @ts-check\r\nimport React from \"react\";\r\n\r\nconst MessagesLoading = () => {\r\n  return (\r\n    <div className=\"no-messages flex-column d-flex flex-row justify-content-center align-items-center text-muted text-center\">\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"visually-hidden\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesLoading;\r\n","// @ts-check\r\nimport React from \"react\";\r\nimport { CardText } from \"react-bootstrap-icons\";\r\n\r\nconst NoMessages = () => {\r\n  return (\r\n    <div className=\"no-messages flex-column d-flex flex-row justify-content-center align-items-center text-muted text-center\">\r\n      <CardText size={96} />\r\n      <p>No messages</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMessages;\r\n","const ClockIcon = () => (\r\n  <svg\r\n    width={12}\r\n    height={12}\r\n    className=\"prefix__MuiSvgIcon-root prefix__jss80 prefix__MuiSvgIcon-fontSizeLarge\"\r\n    viewBox=\"0 0 24 24\"\r\n    aria-hidden=\"true\"\r\n  >\r\n    <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\r\n    <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" />\r\n  </svg>\r\n);\r\n\r\nexport default ClockIcon;\r\n","// @ts-check\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport ClockIcon from \"./ClockIcon\";\r\n\r\nconst ReceiverMessage = ({\r\n  username = \"user\",\r\n  message = \"Lorem ipsum dolor...\",\r\n  date,\r\n}) => (\r\n  <div className=\"d-flex\">\r\n    <div style={{ flex: 1 }} />\r\n    <div style={{ width: \"50%\" }} className=\"text-right mb-4\">\r\n      <div\r\n        className=\"conversation-list d-inline-block bg-light px-3 py-2\"\r\n        style={{ borderRadius: 12 }}\r\n      >\r\n        <div className=\"ctext-wrap\">\r\n          <div\r\n            className=\"conversation-name text-left text-primary mb-1\"\r\n            style={{\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            {username}\r\n          </div>\r\n          <p className=\"text-left\">{message}</p>\r\n          <p className=\"chat-time mb-0\">\r\n            <ClockIcon /> {moment.unix(date).format(\"LT\")}{\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nexport default ReceiverMessage;\r\n","// @ts-check\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport ClockIcon from \"./ClockIcon\";\r\nimport OnlineIndicator from \"../../OnlineIndicator\";\r\n\r\nconst SenderMessage = ({\r\n  user,\r\n  message = \"Lorem ipsum dolor...\",\r\n  date,\r\n  onUserClicked,\r\n}) => (\r\n  <div className=\"d-flex\">\r\n    <div style={{ width: \"50%\" }} className=\"text-left mb-4\">\r\n      <div\r\n        className=\"conversation-list d-inline-block px-3 py-2\"\r\n        style={{ borderRadius: 12, backgroundColor: \"rgba(85, 110, 230, 0.1)\" }}\r\n      >\r\n        <div className=\"ctext-wrap\">\r\n          {user && (\r\n            <div className=\"conversation-name text-primary d-flex align-items-center mb-1\">\r\n              <div\r\n                className=\"mr-2\"\r\n                style={{\r\n                  fontWeight: 600,\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={onUserClicked}\r\n              >\r\n                {user.username}\r\n              </div>\r\n              <OnlineIndicator width={7} height={7} online={user.online} />\r\n            </div>\r\n          )}\r\n          <p className=\"text-left\">{message}</p>\r\n          <p className=\"chat-time mb-0\">\r\n            <ClockIcon /> {moment.unix(date).format(\"LT\")}{\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div style={{ flex: 1 }} />\r\n  </div>\r\n);\r\n\r\nexport default SenderMessage;\r\n","// @ts-check\r\nimport React from \"react\";\r\nimport { MESSAGES_TO_LOAD } from \"../../../../api\";\r\nimport InfoMessage from \"./components/InfoMessage\";\r\nimport MessagesLoading from \"./components/MessagesLoading\";\r\nimport NoMessages from \"./components/NoMessages\";\r\nimport ReceiverMessage from \"./components/ReceiverMessage\";\r\nimport SenderMessage from \"./components/SenderMessage\";\r\n\r\nconst MessageList = ({\r\n  messageListElement,\r\n  messages,\r\n  room,\r\n  onLoadMoreMessages,\r\n  user,\r\n  onUserClicked,\r\n  users,\r\n}) => (\r\n  <div\r\n    ref={messageListElement}\r\n    className=\"chat-box-wrapper position-relative d-flex\"\r\n  >\r\n    {messages === undefined ? (\r\n      <MessagesLoading />\r\n    ) : messages.length === 0 ? (\r\n      <NoMessages />\r\n    ) : (\r\n      <></>\r\n    )}\r\n    <div className=\"px-4 pt-5 chat-box position-absolute\">\r\n      {messages && messages.length !== 0 && (\r\n        <>\r\n          {room.offset && room.offset >= MESSAGES_TO_LOAD ? (\r\n            <div className=\"d-flex flex-row align-items-center mb-4\">\r\n              <div\r\n                style={{ height: 1, backgroundColor: \"#eee\", flex: 1 }}\r\n              ></div>\r\n              <div className=\"mx-3\">\r\n                <button\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"true\"\r\n                  type=\"button\"\r\n                  onClick={onLoadMoreMessages}\r\n                  className=\"btn rounded-button btn-secondary nav-btn\"\r\n                  id=\"__BVID__168__BV_toggle_\"\r\n                >\r\n                  Load more\r\n                </button>\r\n              </div>\r\n              <div\r\n                style={{ height: 1, backgroundColor: \"#eee\", flex: 1 }}\r\n              ></div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {messages.map((message, x) => {\r\n            const key = message.message + message.date + message.from + x;\r\n            if (message.from === \"info\") {\r\n              return <InfoMessage key={key} message={message.message} />;\r\n            }\r\n            if (+message.from !== +user.id) {\r\n              return (\r\n                <SenderMessage\r\n                  onUserClicked={() => onUserClicked(message.from)}\r\n                  key={key}\r\n                  message={message.message}\r\n                  date={message.date}\r\n                  user={users[message.from]}\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <ReceiverMessage\r\n                username={\r\n                  users[message.from] ? users[message.from].username : \"\"\r\n                }\r\n                key={key}\r\n                message={message.message}\r\n                date={message.date}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\nexport default MessageList;\r\n","// @ts-check\r\nconst TypingArea = ({ message, setMessage, onSubmit }) => (\r\n  <div className=\"p-3 chat-input-section\">\r\n    <form className=\"row\" onSubmit={onSubmit}>\r\n      <div className=\"col\">\r\n        <div className=\"position-relative\">\r\n          <input\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Enter Message...\"\r\n            className=\"form-control chat-input\"\r\n          />\r\n          {/**/}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-auto\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-rounded chat-send w-md\"\r\n        >\r\n          <span className=\"d-none d-sm-inline-block mr-2\">Send</span>\r\n          <svg width={13} height={13} viewBox=\"0 0 24 24\" tabIndex={-1}>\r\n            <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\" fill=\"white\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default TypingArea;\r\n","// @ts-check\r\nimport { useCallback } from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { addRoom, getMessages } from \"../../api\";\r\nimport { useAppState } from \"../../state\";\r\nimport { parseRoomName, populateUsersFromLoadedMessages } from \"../../utils\";\r\n\r\n/** Lifecycle hooks with callbacks for the Chat component */\r\nconst useChatHandlers = (/** @type {import(\"../../state\").UserEntry} */ user) => {\r\n  const [state, dispatch] = useAppState();\r\n  const messageListElement = useRef(null);\r\n\r\n  /** @type {import(\"../../state\").Room} */\r\n  const room = state.rooms[state.currentRoom];\r\n  const roomId = room?.id;\r\n  const messages = room?.messages;\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const scrollToTop = useCallback(() => {\r\n    setTimeout(() => {\r\n      if (messageListElement.current) {\r\n        messageListElement.current.scrollTop = 0;\r\n      }\r\n    }, 0);\r\n  }, []);\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    if (messageListElement.current) {\r\n      messageListElement.current.scrollTo({\r\n        top: messageListElement.current.scrollHeight,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, scrollToBottom]);\r\n\r\n  const onFetchMessages = useCallback(\r\n    (offset = 0, prepend = false) => {\r\n      getMessages(roomId, offset).then(async (messages) => {\r\n        /** We've got messages but it's possible we might not have the cached user entires which correspond to those messages */\r\n        await populateUsersFromLoadedMessages(state.users, dispatch, messages);\r\n\r\n        dispatch({\r\n          type: prepend ? \"prepend messages\" : \"set messages\",\r\n          payload: { id: roomId, messages: messages },\r\n        });\r\n        if (prepend) {\r\n          setTimeout(() => {\r\n            scrollToTop();\r\n          }, 10);\r\n        } else {\r\n          scrollToBottom();\r\n        }\r\n      });\r\n    },\r\n    [dispatch, roomId, scrollToBottom, scrollToTop, state.users]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (roomId === undefined) {\r\n      return;\r\n    }\r\n    if (messages === undefined) {\r\n      /** Fetch logic goes here */\r\n      onFetchMessages();\r\n    }\r\n  }, [\r\n    messages,\r\n    dispatch,\r\n    roomId,\r\n    state.users,\r\n    state,\r\n    scrollToBottom,\r\n    onFetchMessages,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (messageListElement.current) {\r\n      scrollToBottom();\r\n    }\r\n  }, [scrollToBottom, roomId]);\r\n\r\n  const onUserClicked = async (userId) => {\r\n    /** Check if room exists. */\r\n    const targetUser = state.users[userId];\r\n    let roomId = targetUser.room;\r\n    if (roomId === undefined) {\r\n      // @ts-ignore\r\n      const room = await addRoom(userId, user.id);\r\n      roomId = room.id;\r\n      /** We need to set this room id to user. */\r\n      dispatch({ type: \"set user\", payload: { ...targetUser, room: roomId } });\r\n      /** Then a new room should be added to the store. */\r\n      dispatch({\r\n        type: \"add room\",\r\n        // @ts-ignore\r\n        payload: { id: roomId, name: parseRoomName(room.names, user.username) },\r\n      });\r\n    }\r\n    /** Then a room should be changed */\r\n    dispatch({ type: \"set current room\", payload: roomId });\r\n  };\r\n\r\n  const onLoadMoreMessages = useCallback(() => {\r\n    onFetchMessages(room.offset, true);\r\n  }, [onFetchMessages, room]);\r\n\r\n  return {\r\n    onLoadMoreMessages,\r\n    onUserClicked,\r\n    message,\r\n    setMessage,\r\n    dispatch,\r\n    room,\r\n    rooms: state.rooms,\r\n    currentRoom: state.currentRoom,\r\n    messageListElement,\r\n    roomId,\r\n    users: state.users,\r\n    messages,\r\n  };\r\n};\r\nexport default useChatHandlers;","// @ts-check\r\nimport React from \"react\";\r\nimport ChatList from \"./components/ChatList\";\r\nimport MessageList from \"./components/MessageList\";\r\nimport TypingArea from \"./components/TypingArea\";\r\nimport useChatHandlers from \"./use-chat-handlers\";\r\n\r\n/**\r\n * @param {{\r\n *  onLogOut: () => void,\r\n *  onMessageSend: (message: string, roomId: string) => void,\r\n *  user: import(\"../../state\").UserEntry\r\n * }} props\r\n */\r\nexport default function Chat({ onLogOut, user, onMessageSend }) {\r\n  const {\r\n    onLoadMoreMessages,\r\n    onUserClicked,\r\n    message,\r\n    setMessage,\r\n    rooms,\r\n    room,\r\n    currentRoom,\r\n    dispatch,\r\n    messageListElement,\r\n    roomId,\r\n    messages,\r\n    users,\r\n  } = useChatHandlers(user);\r\n\r\n  return (\r\n    <div className=\"container py-5 px-4\">\r\n      <div className=\"chat-body row overflow-hidden shadow bg-light rounded\">\r\n        <div className=\"col-4 px-0\">\r\n          <ChatList\r\n            user={user}\r\n            onLogOut={onLogOut}\r\n            rooms={rooms}\r\n            currentRoom={currentRoom}\r\n            dispatch={dispatch}\r\n          />\r\n        </div>\r\n        {/* Chat Box*/}\r\n        <div className=\"col-8 px-0 flex-column bg-white rounded-lg\">\r\n          <div className=\"px-4 py-4\" style={{ borderBottom: \"1px solid #eee\" }}>\r\n            <h2 className=\"font-size-15 mb-0\">{room ? room.name : \"Room\"}</h2>\r\n          </div>\r\n          <MessageList\r\n            messageListElement={messageListElement}\r\n            messages={messages}\r\n            room={room}\r\n            onLoadMoreMessages={onLoadMoreMessages}\r\n            user={user}\r\n            onUserClicked={onUserClicked}\r\n            users={users}\r\n          />\r\n\r\n          {/* Typing area */}\r\n          <TypingArea\r\n            message={message}\r\n            setMessage={setMessage}\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              onMessageSend(message.trim(), roomId);\r\n              setMessage(\"\");\r\n\r\n              messageListElement.current.scrollTop =\r\n                messageListElement.current.scrollHeight;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// @ts-check\r\nimport React from \"react\";\r\n\r\nexport function LoadingScreen() {\r\n  return (\r\n    <div className=\"centered-box\">\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"visually-hidden\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// @ts-check\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { getMe, login, logOut } from \"./api\";\r\nimport io from \"socket.io-client\";\r\nimport { parseRoomName } from \"./utils\";\r\n\r\n/**\r\n * @param {import('./state').UserEntry} newUser\r\n */\r\nconst updateUser = (newUser, dispatch, infoMessage) => {\r\n  dispatch({ type: \"set user\", payload: newUser });\r\n  if (infoMessage !== undefined) {\r\n    dispatch({\r\n      type: \"append message\",\r\n      payload: {\r\n        id: \"0\",\r\n        message: {\r\n          date: Math.random() * 10000,\r\n          from: \"info\",\r\n          message: infoMessage,\r\n        },\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n/** @returns {[SocketIOClient.Socket, boolean]} */\r\nconst useSocket = (user, dispatch) => {\r\n  const [connected, setConnected] = useState(false);\r\n  /** @type {React.MutableRefObject<SocketIOClient.Socket>} */\r\n  const socketRef = useRef(null);\r\n  const socket = socketRef.current;\r\n\r\n  useEffect(() => {\r\n    if (user === null) {\r\n      if (socket !== null) {\r\n        socket.disconnect();\r\n      }\r\n      setConnected(false);\r\n    } else {\r\n      if (socket !== null) {\r\n        socket.connect();\r\n      } else {\r\n        socketRef.current = io();\r\n      }\r\n      setConnected(true);\r\n    }\r\n  }, [user, socket]);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (connected && user) {\r\n      socket.on(\"user.connected\", (newUser) => {\r\n        updateUser(newUser, dispatch, `${newUser.username} connected`);\r\n      });\r\n      socket.on(\"user.disconnected\", (newUser) =>\r\n        updateUser(newUser, dispatch, `${newUser.username} left`)\r\n      );\r\n      socket.on(\"show.room\", (room) => {\r\n        console.log({ user });\r\n        dispatch({\r\n          type: \"add room\",\r\n          payload: {\r\n            id: room.id,\r\n            name: parseRoomName(room.names, user.username),\r\n          },\r\n        });\r\n      });\r\n      socket.on(\"message\", (message) => {\r\n        /** Set user online */\r\n        dispatch({\r\n          type: \"make user online\",\r\n          payload: message.from,\r\n        });\r\n        dispatch({\r\n          type: \"append message\",\r\n          payload: { id: message.roomId === undefined ? \"0\" : message.roomId, message },\r\n        });\r\n      });\r\n    } else {\r\n      \r\n      if (socket) {\r\n        socket.off(\"user.connected\");\r\n        socket.off(\"user.disconnected\");\r\n        socket.off(\"user.room\");\r\n        socket.off(\"message\");\r\n      }\r\n    }\r\n  }, [connected, user, dispatch, socket]);\r\n\r\n  return [socket, connected];\r\n};\r\n\r\n\r\nconst useUser = (onUserLoaded = (user) => { }, dispatch) => {\r\n  const [loading, setLoading] = useState(true);\r\n  /** @type {[import('./state.js').UserEntry | null, React.Dispatch<import('./state.js').UserEntry>]} */\r\n  const [user, setUser] = useState(null);\r\n  \r\n  const onLogIn = (\r\n    username = \"\",\r\n    password = \"\",\r\n    onError = (val = null) => { },\r\n    onLoading = (loading = false) => { }\r\n  ) => {\r\n    onError(null);\r\n    onLoading(true);\r\n    login(username, password)\r\n      .then((x) => {\r\n        setUser(x);\r\n      })\r\n      .catch((e) => onError(e.message))\r\n      .finally(() => onLoading(false));\r\n  };\r\n\r\n  \r\n  const onLogOut = async () => {\r\n    logOut().then(() => {\r\n      setUser(null);\r\n      dispatch({ type: \"clear\" });\r\n      setLoading(true);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      return;\r\n    }\r\n    getMe().then((user) => {\r\n      setUser(user);\r\n      setLoading(false);\r\n      onUserLoaded(user);\r\n    });\r\n  }, [onUserLoaded, loading]);\r\n\r\n  return { user, onLogIn, onLogOut, loading };\r\n};\r\n\r\nexport {\r\n  updateUser,\r\n  useSocket,\r\n  useUser\r\n};","// @ts-check\r\nimport React, { useEffect, useCallback } from \"react\";\r\nimport Login from \"./components/Login\";\r\nimport Chat from \"./components/Chat\";\r\nimport { getOnlineUsers, getRooms } from \"./api\";\r\nimport useAppStateContext, { AppContext } from \"./state\";\r\nimport moment from \"moment\";\r\nimport { parseRoomName } from \"./utils\";\r\nimport { LoadingScreen } from \"./components/LoadingScreen\";\r\nimport { useSocket, useUser } from \"./hooks\";\r\n\r\nconst App = () => {\r\n  const {\r\n    loading,\r\n    user,\r\n    state,\r\n    dispatch,\r\n    onLogIn,\r\n    onMessageSend,\r\n    onLogOut,\r\n  } = useAppHandlers();\r\n\r\n  if (loading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  const showLogin = !user;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      <div\r\n        className={`full-height ${showLogin ? \"bg-light\" : \"\"}`}\r\n        style={{\r\n          backgroundColor: !showLogin ? \"#495057\" : undefined,\r\n        }}\r\n      >\r\n        {showLogin ? (\r\n          <Login onLogIn={onLogIn} />\r\n        ) : (\r\n          <Chat user={user} onMessageSend={onMessageSend} onLogOut={onLogOut} />\r\n        )}\r\n      </div>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAppHandlers = () => {\r\n  const [state, dispatch] = useAppStateContext();\r\n  const onUserLoaded = useCallback(\r\n    (user) => {\r\n      if (user !== null) {\r\n        if (!state.users[user.id]) {\r\n          dispatch({ type: \"set user\", payload: { ...user, online: true } });\r\n        }\r\n      }\r\n    },\r\n    [dispatch, state.users]\r\n  );\r\n\r\n  const { user, onLogIn, onLogOut, loading } = useUser(onUserLoaded, dispatch);\r\n  const [socket, connected] = useSocket(user, dispatch);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (user === null) {\r\n      return;\r\n    }\r\n    if (connected) {\r\n      const newRooms = [];\r\n      Object.keys(state.rooms).forEach((roomId) => {\r\n        const room = state.rooms[roomId];\r\n        if (room.connected) {\r\n          return;\r\n        }\r\n        newRooms.push({ ...room, connected: true });\r\n        socket.emit(\"room.join\", room.id);\r\n      });\r\n      if (newRooms.length !== 0) {\r\n        dispatch({ type: \"set rooms\", payload: newRooms });\r\n      }\r\n    } else {\r\n      \r\n      const newRooms = [];\r\n      Object.keys(state.rooms).forEach((roomId) => {\r\n        const room = state.rooms[roomId];\r\n        if (!room.connected) {\r\n          return;\r\n        }\r\n        newRooms.push({ ...room, connected: false });\r\n      });\r\n     \r\n      if (newRooms.length !== 0) {\r\n        dispatch({ type: \"set rooms\", payload: newRooms });\r\n      }\r\n    }\r\n  }, [user, connected, dispatch, socket, state.rooms, state.users]);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (Object.values(state.rooms).length === 0 && user !== null) {\r\n      getOnlineUsers().then((users) => {\r\n        dispatch({\r\n          type: \"append users\",\r\n          payload: users,\r\n        });\r\n      });\r\n      \r\n      getRooms(user.id).then((rooms) => {\r\n        const payload = [];\r\n        rooms.forEach(({ id, names }) => {\r\n          payload.push({ id, name: parseRoomName(names, user.username) });\r\n        });\r\n        \r\n        dispatch({\r\n          type: \"set rooms\",\r\n          payload,\r\n        });\r\n        dispatch({ type: \"set current room\", payload: \"0\" });\r\n      });\r\n    }\r\n  }, [dispatch, state.rooms, user]);\r\n\r\n  const onMessageSend = useCallback(\r\n    (message, roomId) => {\r\n      if (typeof message !== \"string\" || message.trim().length === 0) {\r\n        return;\r\n      }\r\n      if (!socket) {\r\n        console.error(\"Couldn't send message\");\r\n      }\r\n      socket.emit(\"message\", {\r\n        roomId: roomId,\r\n        message,\r\n        from: user.id,\r\n        date: moment(new Date()).unix(),\r\n      });\r\n    },\r\n    [user, socket]\r\n  );\r\n\r\n  return {\r\n    loading,\r\n    user,\r\n    state,\r\n    dispatch,\r\n    onLogIn,\r\n    onMessageSend,\r\n    onLogOut,\r\n  };\r\n};\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/style-overrides.css\";\r\nimport \"./styles/style.css\";\r\nimport \"./styles/font-face.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}